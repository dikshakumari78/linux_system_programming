#include <iostream>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <vector>
#include <algorithm>
#include <cstring>

void reverseLine(char* line, ssize_t length) {
    std::reverse(line, line + length);
}

void reverseFile(const char* filepath) {
    int fd = open(filepath, O_RDWR);
    if (fd < 0) {
        perror("Error opening file");
        return;
    }

    struct stat file_stat;
    if (fstat(fd, &file_stat) < 0) {
        perror("Error getting file stats");
        close(fd);
        return;
    }

    size_t file_size = file_stat.st_size;
    std::vector<char> buffer(file_size);
    ssize_t bytes_read = read(fd, buffer.data(), file_size);
    if (bytes_read < 0) {
        perror("Error reading file");
        close(fd);
        return;
    }

    lseek(fd, 0, SEEK_SET);

    size_t start = 0;
    for (size_t i = 0; i < file_size; ++i) {
        if (buffer[i] == '\n' || i == file_size - 1) {
            size_t end = (i == file_size - 1) ? i + 1 : i;
            reverseLine(buffer.data() + start, end - start);
            start = i + 1;
        }
    }

    if (write(fd, buffer.data(), file_size) < 0) {
        perror("Error writing file");
    }

    close(fd);
}

int main(int argc, char* argv[]) {
    if (argc != 2) {
        std::cerr << "Usage: " << argv[0] << " <file path>" << std::endl;
        return 1;
    }

    reverseFile(argv[1]);

    return 0;
}
